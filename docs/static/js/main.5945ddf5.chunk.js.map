{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","className","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,oCACI,0BAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACtCN,EAAc,OAOV,yBAAKO,UAAU,cACX,2BACIC,KAAK,OACLD,UAAU,eACVE,YAAY,0BACZC,MAASX,EACTY,SAtBM,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,c,uBCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAUH,GAFvF,sBAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAElC,OACI,yBAAKT,UAAU,0CACX,yBAAKuB,IAAKd,EAAKe,IAAKL,IACpB,2BAAIA,KCFHM,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECCX,SAAEA,GAAc,MAGdhB,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAL2B,mBAGjCC,EAHiC,KAG1BC,EAH0B,KAqBxC,OAbAC,qBAAW,WAEPvB,EAAQC,GACHuB,MAAM,SAAAb,GAEHW,EAAS,CACLd,KAAMG,EACNS,SAAS,SAItB,CAACnB,IAEGoB,EDlB0BI,CAAcxB,GAAlCa,EAJsB,EAI3BN,KAAaY,EAJc,EAIdA,QAErB,OACI,oCACI,wBAAI1B,UAAU,qCAAsCO,GAElDmB,GAAW,0CAEb,yBAAK1B,UAAU,aAGHoB,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIe,IAAMf,EAAIC,IACLD,UEnBxBgB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,KAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEQ4C,EAAWlB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACIyB,IAAOzB,EACPA,SAAYA,UCbxC4B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.5945ddf5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories(cat => [ inputValue, ...cat ])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Ingrese el Gif a buscar\"\r\n                        value= { inputValue }\r\n                        onChange= { handleInputChange }\r\n                    />\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=8tVOSoRPmuNXYTF8YXO8mGQTEU1ocPFj&q=${ encodeURI(category) }&limit=10`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n} ","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    /* IMPORTAMOS EL HOOK */\r\n    /* RENOMBRAMOS DATA POR IMAGES */\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p>Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                    { \r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={ img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    } \r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","/* EL (USE) SIGIFINICA QUE ES UN CUSTOM HOOK */\r\n/* LOS HOOKS NO SON MAS QUE FUNCIONES */\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    /* LOS CUSTOM HOOKS TAMBIEN PUEDEN TENER UN ESTADO */\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then( img => {\r\n                /* TENEMOS QUE MANEJAR LA MISMA ESTRUCTURA QUE ARRIBA */\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; // state -> {data: [], loading: true}\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([''])\r\n\r\n    return(\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories= {setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key= { category }\r\n                            category= { category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {GifExpertApp} from './GifExpertApp';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}